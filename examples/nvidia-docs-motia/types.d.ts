/**
 * Automatically generated types for motia
 * Do NOT edit this file manually.
 * 
 * Consider adding this file to .prettierignore and eslint ignore.
 */
import { EventHandler, ApiRouteHandler, ApiResponse, MotiaStream, CronHandler } from 'motia'

declare module 'motia' {
  interface FlowContextStateStreams {
    
  }

  interface Handlers {
    'documentation-generator': EventHandler<{ repo_url: string; timestamp: string; summary: string; statistics: { total_files: number; total_size_kb: number; language_breakdown: Record<string, number>; primary_language: string }; files: { path: string; language: string; size: number }[]; repository_structure: { has_readme: boolean; has_license: boolean; has_tests: boolean; has_docs: boolean; has_package_json: boolean; has_dockerfile: boolean } }, { topic: 'docs.generated'; data: { repo_url: string; documentation: { complete_markdown: string; sections: { overview: string; architecture: string; getting_started: string; api_reference: string; file_structure: string; metadata: { generated_at: string; source_repo: string; total_sections: number } }; file_path: string; filename: string }; source_analysis: { repo_url: string; statistics?: { primary_language: string; total_files: number; language_breakdown: Record<string, number> }; repository_structure?: { has_tests: boolean; has_package_json: boolean; has_dockerfile: boolean; has_docs: boolean } }; generated_at: string } }>
    'repo-analyzer-api': ApiRouteHandler<{ repo_url: string }, unknown, { topic: 'repo.requested'; data: { repo_url: string } }>
    'mermaid-diagram-generator': EventHandler<{ repo_url: string; documentation: { original?: unknown; enhanced: { complete_markdown: string; sections?: unknown; executive_summary: string; file_path: string; filename: string } }; quality_metrics?: unknown; review_timestamp: string; improvements_applied: boolean; source_analysis: { repo_url: string; statistics?: { primary_language: string; total_files: number; language_breakdown: Record<string, number> }; files?: { path: string; language: string; size: number }[]; repository_structure?: { has_tests: boolean; has_package_json: boolean; has_dockerfile: boolean; has_docs: boolean } } }, { topic: 'diagrams.generated'; data: { repo_url: string; diagrams?: unknown[]; source_documentation?: unknown; source_analysis: { statistics: { primary_language: string; language_breakdown: Record<string, number> }; files: { path: string; language: string; size: number }[]; repository_structure?: { has_package_json: boolean; has_tests: boolean; has_docs: boolean } }; generated_at: string } }>
    'documentation-qa-reviewer': EventHandler<{ repo_url: string; documentation: { complete_markdown: string; sections: { overview: string; architecture: string; getting_started: string; api_reference: string; file_structure: string; metadata: { generated_at: string; source_repo: string; total_sections: number } }; file_path: string; filename: string }; source_analysis: { repo_url: string; statistics?: { primary_language: string; total_files: number; language_breakdown: Record<string, number> }; repository_structure?: { has_tests: boolean; has_package_json: boolean; has_dockerfile: boolean; has_docs: boolean } }; generated_at: string }, { topic: 'docs.reviewed'; data: { repo_url: string; documentation: { original?: unknown; enhanced: { complete_markdown: string; sections?: unknown; executive_summary: string; file_path: string; filename: string } }; quality_metrics?: unknown; review_timestamp: string; improvements_applied: boolean; source_analysis: { repo_url: string; statistics?: { primary_language: string; total_files: number; language_breakdown: Record<string, number> }; files?: { path: string; language: string; size: number }[]; repository_structure?: { has_tests: boolean; has_package_json: boolean; has_dockerfile: boolean; has_docs: boolean } } } }>
    'test-generator': EventHandler<{ repo_url: string; diagrams?: unknown[]; source_documentation?: unknown; source_analysis: { statistics: { primary_language: string; language_breakdown: Record<string, number> }; files: { path: string; language: string; size: number }[]; repository_structure?: { has_package_json: boolean; has_tests: boolean; has_docs: boolean } }; generated_at: string }, never>
    'repository-analyzer': EventHandler<{ repo_url: string }, { topic: 'repo.analyzed'; data: { repo_url: string; timestamp: string; summary: string; statistics: { total_files: number; total_size_kb: number; language_breakdown: Record<string, number>; primary_language: string }; files: { path: string; language: string; size: number }[]; repository_structure: { has_readme: boolean; has_license: boolean; has_tests: boolean; has_docs: boolean; has_package_json: boolean; has_dockerfile: boolean } } }>
  }
}