/**
 * Automatically generated types for motia
 * Do NOT edit this file manually.
 * 
 * Consider adding this file to .prettierignore and eslint ignore.
 */
import { EventHandler, ApiRouteHandler, ApiResponse, MotiaStream, CronHandler } from 'motia'

declare module 'motia' {
  interface FlowContextStateStreams {
    
  }

  interface Handlers {
    'WebhookTrigger': ApiRouteHandler<{ content: string; metadata?: Record<string, unknown>; userInfo?: { email?: string; name?: string; id?: string } }, ApiResponse<200, { success: boolean; message: string; requestId: string }> | ApiResponse<400, { error: string }> | ApiResponse<500, { error: string }>, { topic: 'form.submitted'; data: { requestId: string; contentPreview: string; metadata?: Record<string, unknown>; userInfo?: { email?: string; name?: string; id?: string } } }>
    'SlackAlert': EventHandler<{ requestId: string; stage: string; error: string; timestamp: string }, never>
    'RAGAgent': EventHandler<{ requestId: string; chunkCount: number; content: string; metadata?: Record<string, unknown>; userInfo?: { email?: string; name?: string; id?: string } }, { topic: 'processing.complete'; data: { requestId: string; result: string; tokensUsed?: number; metadata?: Record<string, unknown>; userInfo?: { email?: string; name?: string; id?: string } } } | { topic: 'processing.failed'; data: { requestId: string; stage: string; error: string; timestamp: string } }>
    'ProcessText': EventHandler<{ requestId: string; contentPreview: string; metadata?: Record<string, unknown>; userInfo?: { email?: string; name?: string; id?: string } }, { topic: 'text.processed'; data: { requestId: string; chunkCount: number; content: string; metadata?: Record<string, unknown>; userInfo?: { email?: string; name?: string; id?: string } } } | { topic: 'processing.failed'; data: { requestId: string; stage: string; error: string; timestamp: string } }>
    'LogToSheets': EventHandler<{ requestId: string; result: string; tokensUsed?: number; metadata?: Record<string, unknown>; userInfo?: { email?: string; name?: string; id?: string } }, never>
  }
}