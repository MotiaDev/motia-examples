/**
 * Automatically generated types for motia
 * Do NOT edit this file manually.
 * 
 * Consider adding this file to .prettierignore and eslint ignore.
 */
import { EventHandler, ApiRouteHandler, ApiResponse, MotiaStream, CronHandler } from 'motia'

declare module 'motia' {
  interface FlowContextStateStreams {
    
  }

  interface Handlers {
    'technical-analyst': EventHandler<{ query?: string; timestamp: string; response?: unknown; analysisInput?: unknown; generalAnalysis?: unknown; traceId?: string }, { topic: 'technical.analysis.completed'; data: {} }>
    'risk-manager': EventHandler<{ query?: string; timestamp: string; response?: unknown; analysisInput?: unknown; generalAnalysis?: unknown; traceId?: string }, { topic: 'risk.analysis.completed'; data: {} }>
    'portfolio-manager': EventHandler<{ query?: string; timestamp: string; response?: unknown; analysisInput?: unknown; generalAnalysis?: unknown; traceId?: string }, { topic: 'portfolio.analysis.completed'; data: {} }>
    'parallel-analysis-coordinator': EventHandler<{}, { topic: 'comprehensive.analysis.completed'; data: { query?: string; comprehensiveReport?: unknown; status?: string } }>
    'fundamental-analyst': EventHandler<{ query?: string; timestamp: string; response?: unknown; analysisInput?: unknown; generalAnalysis?: unknown; traceId?: string }, { topic: 'fundamental.analysis.completed'; data: {} }>
    'WebSearchAgent': EventHandler<{ query: string }, { topic: 'web.search.completed'; data: { query: string; resultCount?: number; symbols?: string[]; resultSummary?: string; error?: string; message?: string } }>
    'save-result': EventHandler<{ query?: string; comprehensiveReport?: unknown; status?: string }, never>
    'response-coordinator': EventHandler<{ query: string; resultCount?: number; symbols?: string[]; resultSummary?: string; error?: string; message?: string }, { topic: 'response.completed'; data: { query?: string; timestamp: string; response?: unknown; error?: string } }>
    'nebius-ai-analysis': EventHandler<{ query?: string; timestamp: string; response?: unknown; error?: string }, { topic: 'parallel.analyses.started'; data: { query?: string; timestamp: string; response?: unknown; analysisInput?: unknown; generalAnalysis?: unknown; traceId?: string } }>
    'finance-data': EventHandler<{ query: string }, { topic: 'finance.data.completed'; data: { query: string; resultCount?: number; symbols?: string[]; resultSummary?: string; error?: string; message?: string } }>
    'finance-result-api': ApiRouteHandler<Record<string, unknown>, unknown, never>
    'finance-query-api': ApiRouteHandler<{ query: string }, unknown, { topic: 'query.received'; data: { query: string } }>
  }
}