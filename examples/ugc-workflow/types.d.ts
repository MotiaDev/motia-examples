/**
 * Automatically generated types for motia
 * Do NOT edit this file manually.
 * 
 * Consider adding this file to .prettierignore and eslint ignore.
 */
import { EventHandler, ApiRouteHandler, ApiResponse, MotiaStream, CronHandler } from 'motia'

declare module 'motia' {
  interface FlowContextStateStreams {
    
  }

  interface Handlers {
    'FileStorageStep': EventHandler<{ requestId: string; variantId: number; videoUrl: string; generatedImageUrl: string; variant: { variant_id: number; camera_angle: string; lighting: string; product_info: { brand_name: string; product: string; watermark: string } }; timestamp: string }, never>
    'VideoGenerationStep': EventHandler<{ requestId: string; variantId: number; originalImageUrl: string; generatedImageUrl: string; variant: { variant_id: number; camera_angle: string; lighting: string; headline_seed: string; product_info: { brand_name: string; product: string; watermark: string } }; timestamp: string }, { topic: 'video.generated'; data: { requestId: string; variantId: number; videoUrl: string; generatedImageUrl: string; variant: { variant_id: number; camera_angle: string; lighting: string; product_info: { brand_name: string; product: string; watermark: string } }; timestamp: string } }>
    'ImageGenerationStep': EventHandler<{ requestId: string; originalImageUrl: string; variant: { variant_id: number; image_prompt: string; aspect_ratio: string; camera_angle: string; lighting: string; headline_seed: string; render_preferences: { aspect_ratio: string; lighting: string; camera: string; depth_of_field: string; output_style: string }; brand_colors: { primary: string; secondary: string; tertiary: string }; product_info: { brand_name: string; product: string; watermark: string } }; visionAnalysis?: unknown; timestamp: string }, { topic: 'image.generated'; data: { requestId: string; variantId: number; originalImageUrl: string; generatedImageUrl: string; variant: { variant_id: number; camera_angle: string; lighting: string; headline_seed: string; product_info: { brand_name: string; product: string; watermark: string } }; timestamp: string } }>
    'VariantGenerationStep': EventHandler<{ requestId: string; imageUrl: string; originalImagePath: string; numVariations: number; visionAnalysis: { brand_name: string; product: string; character: string; ad_copy: string; visual_guide: string; text_watermark: string; font_style: string; reference_image_summary: string; palette: { hex: string; name: string }[]; primary_color: string; secondary_color: string; tertiary_color: string }; timestamp: string }, { topic: 'variants.generated'; data: { requestId: string; originalImageUrl: string; variant: { variant_id: number; image_prompt: string; aspect_ratio: string; camera_angle: string; lighting: string; headline_seed: string; render_preferences: { aspect_ratio: string; lighting: string; camera: string; depth_of_field: string; output_style: string }; brand_colors: { primary: string; secondary: string; tertiary: string }; product_info: { brand_name: string; product: string; watermark: string } }; visionAnalysis?: unknown; timestamp: string } }>
    'VisionAnalysisStep': EventHandler<{ requestId: string; imagePath: string; numVariations: number; timestamp: string }, { topic: 'vision.analyzed'; data: { requestId: string; imageUrl: string; originalImagePath: string; numVariations: number; visionAnalysis: { brand_name: string; product: string; character: string; ad_copy: string; visual_guide: string; text_watermark: string; font_style: string; reference_image_summary: string; palette: { hex: string; name: string }[]; primary_color: string; secondary_color: string; tertiary_color: string }; timestamp: string } }>
    'ImageUploadAPI': ApiRouteHandler<{ numVariations?: number }, unknown, { topic: 'image.uploaded'; data: { requestId: string; imagePath: string; numVariations: number; timestamp: string } }>
  }
}