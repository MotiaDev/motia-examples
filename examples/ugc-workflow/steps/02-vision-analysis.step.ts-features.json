[
  {
    "id": "step-configuration",
    "title": "Step Configuration",
    "description": "Event step configuration for vision analysis that subscribes to image uploads and emits analyzed vision data.",
    "lines": ["12-20"]
  },
  {
    "id": "input-schema",
    "title": "Input Schema Definition",
    "description": "Zod schema defining the expected input structure with requestId, imageUrl, numVariations, and timestamp.",
    "lines": ["5-10"]
  },
  {
    "id": "event-subscription",
    "title": "Event Subscription",
    "description": "Subscribes to 'image.uploaded' events to automatically process uploaded images for vision analysis.",
    "lines": ["16"]
  },
  {
    "id": "event-emission",
    "title": "Event Emission",
    "description": "Emits 'vision.analyzed' events to trigger the next steps in the UGC generation workflow.",
    "lines": ["17", "141-151"]
  },
  {
    "id": "handler-implementation",
    "title": "Handler Implementation",
    "description": "Main handler that processes image URLs, performs vision analysis with OpenAI, and normalizes the results.",
    "lines": ["22-156"]
  },
  {
    "id": "openai-integration",
    "title": "OpenAI Vision API Integration",
    "description": "Integrates with OpenAI's GPT-4 Vision API to analyze product images and extract brand, product, and visual information.",
    "lines": ["60-89"]
  },
  {
    "id": "vision-prompt",
    "title": "Structured Vision Prompt",
    "description": "Comprehensive prompt that guides the AI to extract specific product information including brand, colors, styling, and marketing copy.",
    "lines": ["31-58"]
  },
  {
    "id": "json-parsing",
    "title": "JSON Response Parsing",
    "description": "Robust parsing of AI-generated JSON responses with error handling and cleanup of markdown formatting.",
    "lines": ["93-108"]
  },
  {
    "id": "data-normalization",
    "title": "Data Normalization",
    "description": "Normalizes and validates the vision analysis results with fallback defaults for missing or invalid data.",
    "lines": ["110-133"]
  },
  {
    "id": "structured-logging",
    "title": "Structured Logging",
    "description": "Comprehensive logging of analysis progress, results, and errors for observability and debugging.",
    "lines": ["29", "135-139", "152-154"]
  },
  {
    "id": "error-handling",
    "title": "Error Management",
    "description": "Robust error handling for API failures, JSON parsing errors, and other issues with proper error propagation.",
    "lines": ["152-155"]
  },
  {
    "id": "workflow-continuation",
    "title": "Workflow Continuation",
    "description": "Emits structured event data with analyzed vision information to continue the UGC generation pipeline.",
    "lines": ["141-151"]
  }
]
